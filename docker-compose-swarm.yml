version: '3.7'

volumes:
  react_build:
  database:

services:
  celery:
    image: ${FORCAD_REGISTRY}/forcad_celery:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/celery/Dockerfile
    environment:
      - CELERY_CONTAINER_TYPE=worker
    env_file:
      - ./docker_config/postgres/environment.env
    restart: on-failure

  celerybeat:
    image: ${FORCAD_REGISTRY}/forcad_celerybeat:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/celery/Dockerfile
    environment:
      - CELERY_CONTAINER_TYPE=beat
    env_file:
      - ./docker_config/postgres/environment.env
    restart: on-failure

  flower:
    image: ${FORCAD_REGISTRY}/forcad_flower:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/celery/Dockerfile
    environment:
      - CELERY_CONTAINER_TYPE=flower
    env_file:
      - ./docker_config/postgres/environment.env
      - docker_config/celery/flower_environment.env
    restart: on-failure


  initializer:
    image: ${FORCAD_REGISTRY}/forcad_initializer:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/initializer/Dockerfile
    env_file:
      - ./docker_config/postgres/environment.env
    restart: on-failure

  webapi:
    image: ${FORCAD_REGISTRY}/forcad_webapi:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/webapi/Dockerfile
    env_file:
      - ./docker_config/postgres/environment.env
    restart: on-failure
    tty: true

  react_builder:
    image: ${FORCAD_REGISTRY}/forcad_react_builder:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/react_builder/Dockerfile
    volumes:
      - react_build:/react_build/
    restart: on-failure
    deploy:
      placement:
        constraints:
          - node.labels.external == 1

  socat_flag_submitter:
    image: ${FORCAD_REGISTRY}/forcad_tcp_flag_submitter:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/socat_flag_submitter/Dockerfile
    env_file:
      - ./docker_config/postgres/environment.env
    ports:
      - 31337:31337
    restart: on-failure
    tty: true

  nginx:
    image: ${FORCAD_REGISTRY}/forcad_nginx:${FORCAD_ARCH_TAG}
    build:
      context: .
      dockerfile: docker_config/nginx/Dockerfile
    volumes:
      - react_build:/react_build
    ports:
      - 8080:80
    restart: on-failure
    deploy:
      placement:
        constraints:
          - node.labels.external == 1

  redis:
    image: redis:5.0.5-alpine
    restart: on-failure
    sysctls:
      - net.core.somaxconn=1024

  postgres:
    image: postgres:10.8-alpine
    volumes:
      - database:/var/lib/postgresql/data/
    env_file:
      - ./docker_config/postgres/environment.env
    restart: on-failure
    deploy:
      placement:
        constraints:
          - node.labels.db == 1